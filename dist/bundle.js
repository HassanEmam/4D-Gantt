/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ganttChart/Utils/EventEmitter.ts":
/*!**********************************************!*\
  !*** ./src/ganttChart/Utils/EventEmitter.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EventEmitter\": () => (/* binding */ EventEmitter)\n/* harmony export */ });\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this.callbacks = {};\n        this.callbacks = {};\n        this.callbacks.base = {};\n    }\n    EventEmitter.prototype.on = function (_names, callback) {\n        var _this = this;\n        // Errors\n        if (typeof _names === \"undefined\" || _names === \"\") {\n            console.warn(\"wrong names\");\n            return false;\n        }\n        if (typeof callback === \"undefined\") {\n            console.warn(\"wrong callback\");\n            return false;\n        }\n        // Resolve names\n        var names = this.resolveNames(_names);\n        // Each name\n        names.forEach(function (_name) {\n            // Resolve name\n            var name = _this.resolveName(_name);\n            // Create namespace if not exist\n            if (!(_this.callbacks[name.namespace] instanceof Object))\n                _this.callbacks[name.namespace] = {};\n            // Create callback if not exist\n            if (!(_this.callbacks[name.namespace][name.value] instanceof Array))\n                _this.callbacks[name.namespace][name.value] = [];\n            // Add callback\n            _this.callbacks[name.namespace][name.value].push(callback);\n        });\n        return this;\n    };\n    EventEmitter.prototype.off = function (_names) {\n        var _this = this;\n        // Errors\n        if (typeof _names === \"undefined\" || _names === \"\") {\n            console.warn(\"wrong name\");\n            return false;\n        }\n        // Resolve names\n        var names = this.resolveNames(_names);\n        // Each name\n        names.forEach(function (_name) {\n            // Resolve name\n            var name = _this.resolveName(_name);\n            // Remove namespace\n            if (name.namespace !== \"base\" && name.value === \"\") {\n                delete _this.callbacks[name.namespace];\n            }\n            // Remove specific callback in namespace\n            else {\n                // Default\n                if (name.namespace === \"base\") {\n                    // Try to remove from each namespace\n                    for (var namespace in _this.callbacks) {\n                        if (_this.callbacks[namespace] instanceof Object &&\n                            _this.callbacks[namespace][name.value] instanceof Array) {\n                            delete _this.callbacks[namespace][name.value];\n                            // Remove namespace if empty\n                            if (Object.keys(_this.callbacks[namespace]).length === 0)\n                                delete _this.callbacks[namespace];\n                        }\n                    }\n                }\n                // Specified namespace\n                else if (_this.callbacks[name.namespace] instanceof Object &&\n                    _this.callbacks[name.namespace][name.value] instanceof Array) {\n                    delete _this.callbacks[name.namespace][name.value];\n                    // Remove namespace if empty\n                    if (Object.keys(_this.callbacks[name.namespace]).length === 0)\n                        delete _this.callbacks[name.namespace];\n                }\n            }\n        });\n        return this;\n    };\n    EventEmitter.prototype.trigger = function (_name, _args) {\n        var _this = this;\n        // Errors\n        if (typeof _name === \"undefined\" || _name === \"\") {\n            console.warn(\"wrong name\");\n            return false;\n        }\n        var finalResult = null;\n        var result = null;\n        // Default args\n        var args = !(_args instanceof Array) ? [] : _args;\n        // Resolve names (should on have one event)\n        var nameArray = this.resolveNames(_name);\n        // Resolve name\n        var name = this.resolveName(nameArray[0]);\n        // Default namespace\n        if (name.namespace === \"base\") {\n            // Try to find callback in each namespace\n            for (var namespace in this.callbacks) {\n                if (this.callbacks[namespace] instanceof Object &&\n                    this.callbacks[namespace][name.value] instanceof Array) {\n                    this.callbacks[namespace][name.value].forEach(function (callback) {\n                        result = callback.apply(_this, args);\n                        if (typeof finalResult === \"undefined\") {\n                            finalResult = result;\n                        }\n                    });\n                }\n            }\n        }\n        // Specified namespace\n        else if (this.callbacks[name.namespace] instanceof Object) {\n            if (name.value === \"\") {\n                console.warn(\"wrong name\");\n                return this;\n            }\n            this.callbacks[name.namespace][name.value].forEach(function (callback) {\n                result = callback.apply(_this, args);\n                if (typeof finalResult === \"undefined\")\n                    finalResult = result;\n            });\n        }\n        return finalResult;\n    };\n    EventEmitter.prototype.resolveNames = function (_names) {\n        var names = _names;\n        names = names.replace(/[^a-zA-Z0-9 ,/.]/g, \"\");\n        names = names.replace(/[,/]+/g, \" \");\n        names = names.split(\" \");\n        return names;\n    };\n    EventEmitter.prototype.resolveName = function (name) {\n        var newName = {};\n        var parts = name.split(\".\");\n        newName.original = name;\n        newName.value = parts[0];\n        newName.namespace = \"base\"; // Base namespace\n        // Specified namespace\n        if (parts.length > 1 && parts[1] !== \"\") {\n            newName.namespace = parts[1];\n        }\n        return newName;\n    };\n    return EventEmitter;\n}());\n\n\n\n//# sourceURL=webpack://my-webpack-project/./src/ganttChart/Utils/EventEmitter.ts?");

/***/ }),

/***/ "./src/ganttChart/Utils/utils.ts":
/*!***************************************!*\
  !*** ./src/ganttChart/Utils/utils.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFormattedDateFromDate\": () => (/* binding */ createFormattedDateFromDate),\n/* harmony export */   \"createFormattedDateFromStr\": () => (/* binding */ createFormattedDateFromStr),\n/* harmony export */   \"dayDiff\": () => (/* binding */ dayDiff),\n/* harmony export */   \"getDayOfWeek\": () => (/* binding */ getDayOfWeek),\n/* harmony export */   \"getDaysInMonth\": () => (/* binding */ getDaysInMonth),\n/* harmony export */   \"monthDiff\": () => (/* binding */ monthDiff),\n/* harmony export */   \"months\": () => (/* binding */ months)\n/* harmony export */ });\nfunction monthDiff(firstMonth, lastMonth) {\n    var months;\n    months = (lastMonth.getFullYear() - firstMonth.getFullYear()) * 12;\n    months -= firstMonth.getMonth();\n    months += lastMonth.getMonth();\n    return months <= 0 ? 0 : months;\n}\nfunction dayDiff(startDate, endDate) {\n    var difference = endDate.getTime() - startDate.getTime();\n    var days = Math.ceil(difference / (1000 * 3600 * 24)) + 1;\n    return days;\n}\nfunction getDaysInMonth(year, month) {\n    return new Date(year, month, 0).getDate();\n}\nfunction getDayOfWeek(year, month, day) {\n    var daysOfTheWeekArr = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n    var dayOfTheWeekIndex = new Date(year, month, day).getDay();\n    return daysOfTheWeekArr[dayOfTheWeekIndex];\n}\nfunction createFormattedDateFromStr(year, month, day) {\n    var monthStr = month.toString();\n    var dayStr = day.toString();\n    if (monthStr.length === 1) {\n        monthStr = \"0\".concat(monthStr);\n    }\n    if (dayStr.length === 1) {\n        dayStr = \"0\".concat(dayStr);\n    }\n    return \"\".concat(year, \"-\").concat(monthStr, \"-\").concat(dayStr);\n}\nfunction createFormattedDateFromDate(date) {\n    var monthStr = (date.getMonth() + 1).toString();\n    var dayStr = date.getDate().toString();\n    if (monthStr.length === 1) {\n        monthStr = \"0\".concat(monthStr);\n    }\n    if (dayStr.length === 1) {\n        dayStr = \"0\".concat(dayStr);\n    }\n    return \"\".concat(date.getFullYear(), \"-\").concat(monthStr, \"-\").concat(dayStr);\n}\nvar months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n];\n\n\n//# sourceURL=webpack://my-webpack-project/./src/ganttChart/Utils/utils.ts?");

/***/ }),

/***/ "./src/ganttChart/content/grid.ts":
/*!****************************************!*\
  !*** ./src/ganttChart/content/grid.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utils/utils */ \"./src/ganttChart/Utils/utils.ts\");\n/* harmony import */ var _taskRows__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./taskRows */ \"./src/ganttChart/content/taskRows.ts\");\n/* harmony import */ var _timeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timeline */ \"./src/ganttChart/content/timeline.ts\");\n/* harmony import */ var _taskDraw__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./taskDraw */ \"./src/ganttChart/content/taskDraw.ts\");\n\n\n\n\nvar Grid = /** @class */ (function () {\n    function Grid(ganttChart) {\n        this.ganttChart = ganttChart;\n        this.timeLine = new _timeline__WEBPACK_IMPORTED_MODULE_2__[\"default\"](ganttChart);\n        this.fromSelectYear = this.ganttChart.fromSelectYear;\n        this.fromSelectMonth = this.ganttChart.fromSelectMonth;\n        this.toSelectYear = this.ganttChart.toSelectYear;\n        this.toSelectMonth = this.ganttChart.toSelectMonth;\n        this.containerTasks = this.ganttChart.containerTasks;\n        this.containerTimePeriods = this.ganttChart.containerTimePeriods;\n        this.tasks = this.ganttChart.tasks;\n        this.taskDurations = this.ganttChart.taskDurations;\n        this.taskRows = new _taskRows__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.ganttChart);\n        this.taskDraw = new _taskDraw__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.ganttChart);\n    }\n    Grid.prototype.createGrid = function () {\n        var startMonth = new Date(parseInt(this.fromSelectYear.value, 0), parseInt(this.fromSelectMonth.value, 0));\n        var endMonth = new Date(parseInt(this.toSelectYear.value, 0), parseInt(this.toSelectMonth.value, 0));\n        var numMonths = (0,_Utils_utils__WEBPACK_IMPORTED_MODULE_0__.monthDiff)(startMonth, endMonth) + 1;\n        // clear first each time it is changed\n        this.containerTasks.innerHTML = \"\";\n        this.containerTimePeriods.innerHTML = \"\";\n        this.taskRows.createTaskRows();\n        console.log(\"month rows\", startMonth, numMonths);\n        this.timeLine.createMonthsRow(startMonth, numMonths);\n        this.timeLine.createDaysRow(startMonth, numMonths);\n        this.timeLine.createDaysOfTheWeekRow(startMonth, numMonths);\n        this.timeLine.createTaskRowsTimePeriods(startMonth, numMonths);\n        this.taskDraw.addTaskDurations();\n        // TODO: add functions below\n        // createTaskRowsTimePeriods(startMonth, numMonths);\n        // addTaskDurations();\n    };\n    return Grid;\n}());\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Grid);\n\n\n//# sourceURL=webpack://my-webpack-project/./src/ganttChart/content/grid.ts?");

/***/ }),

/***/ "./src/ganttChart/content/taskDraw.ts":
/*!********************************************!*\
  !*** ./src/ganttChart/content/taskDraw.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utils/utils */ \"./src/ganttChart/Utils/utils.ts\");\n\nvar TaskDraw = /** @class */ (function () {\n    function TaskDraw(gantt) {\n        this.gantt = gantt;\n        this.taskDurations = gantt.taskDurations;\n        this.containerTimePeriods = gantt.containerTimePeriods;\n    }\n    TaskDraw.prototype.addTaskDurations = function () {\n        var _this = this;\n        this.taskDurations.forEach(function (taskDuration) {\n            var dateStr = (0,_Utils_utils__WEBPACK_IMPORTED_MODULE_0__.createFormattedDateFromDate)(taskDuration.start);\n            // find gantt-time-period-cell start position\n            var startCell = _this.containerTimePeriods.querySelector(\"div[data-task=\\\"\".concat(taskDuration.task.toString(), \"\\\"][data-date=\\\"\").concat(dateStr, \"\\\"]\"));\n            console.log(\"startCell\", startCell);\n            if (startCell) {\n                // taskDuration bar is a child of start date position of specific task\n                _this.createTaskDurationEl(taskDuration, startCell);\n            }\n        });\n    };\n    TaskDraw.prototype.createTaskDurationEl = function (taskDuration, startCell) {\n        var dayElContainer = this.containerTimePeriods.querySelector(\".gantt-time-period-cell-container\");\n        var taskDurationEl = document.createElement(\"div\");\n        taskDurationEl.classList.add(\"taskDuration\");\n        taskDurationEl.id = taskDuration.id;\n        var days = (0,_Utils_utils__WEBPACK_IMPORTED_MODULE_0__.dayDiff)(taskDuration.start, taskDuration.end);\n        taskDurationEl.style.width = \"calc(\".concat(days, \" * 100%)\");\n        // append at start pos\n        startCell.appendChild(taskDurationEl);\n        return days;\n    };\n    return TaskDraw;\n}());\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TaskDraw);\n\n\n//# sourceURL=webpack://my-webpack-project/./src/ganttChart/content/taskDraw.ts?");

/***/ }),

/***/ "./src/ganttChart/content/taskRows.ts":
/*!********************************************!*\
  !*** ./src/ganttChart/content/taskRows.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Utils_EventEmitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utils/EventEmitter */ \"./src/ganttChart/Utils/EventEmitter.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar TaskRows = /** @class */ (function (_super) {\n    __extends(TaskRows, _super);\n    function TaskRows(ganttChart) {\n        var _this = _super.call(this) || this;\n        _this.ganttChart = ganttChart;\n        _this.containerTasks = _this.ganttChart.containerTasks;\n        _this.tasks = _this.ganttChart.tasks;\n        _this.taskDurations = _this.ganttChart.taskDurations;\n        _this.taskSelect = _this.ganttChart.taskSelect;\n        _this.grid = _this.ganttChart.grid;\n        return _this;\n    }\n    TaskRows.prototype.createTaskRows = function () {\n        var _this = this;\n        var emptyRow = document.createElement(\"div\");\n        emptyRow.className = \"gantt-task-row\";\n        // first 3 rows are empty\n        for (var i = 0; i < 3; i++) {\n            var newEl = emptyRow.cloneNode(true);\n            this.containerTasks.appendChild(newEl);\n        }\n        // add task select values\n        var taskOptionsHTMLStrArr = [];\n        this.tasks.forEach(function (task) {\n            var taskRowEl = document.createElement(\"div\");\n            taskRowEl.id = task.id.toString();\n            taskRowEl.className = \"gantt-task-row\";\n            var taskRowElInput = document.createElement(\"input\");\n            taskRowEl.appendChild(taskRowElInput);\n            taskRowElInput.value = task.name;\n            // update task name\n            taskRowElInput.addEventListener(\"change\", function (e) {\n                _this.updateTasks(e);\n            });\n            taskOptionsHTMLStrArr.push(\"<option value=\\\"\".concat(task.id, \"\\\">\").concat(task.name, \"</option>\"));\n            // add delete button\n            var taskRowElDelBtn = document.createElement(\"button\");\n            taskRowElDelBtn.innerText = \"✕\";\n            taskRowElDelBtn.addEventListener(\"click\", function (e) {\n                _this.deleteTask(e);\n            });\n            taskRowEl.appendChild(taskRowElDelBtn);\n            _this.containerTasks.appendChild(taskRowEl);\n        });\n        this.taskSelect.innerHTML = \"\\n      \".concat(taskOptionsHTMLStrArr.join(\"\"), \"\\n    \");\n    };\n    TaskRows.prototype.updateTasks = function (e) {\n        var _this = this;\n        var target = e.target;\n        var parent = target.parentNode;\n        var idNum = parseInt(parent.id, 0);\n        var value = parent.firstChild.value;\n        var newTasks = this.tasks.filter(function (task) { return task.id !== idNum; });\n        newTasks.push({ id: idNum, name: value });\n        newTasks = newTasks.sort(function (a, b) { return a.id - b.id; });\n        // update original / make API request to update data on backend\n        this.tasks = newTasks;\n        // update tasks select\n        var newTaskOptionsHTMLStrArr = [];\n        this.tasks.forEach(function (task) {\n            newTaskOptionsHTMLStrArr.push(\"<option value=\\\"\".concat(task.id, \"\\\">\").concat(task.name, \"</option>\"));\n            _this.taskSelect.innerHTML = \"\\n        \".concat(newTaskOptionsHTMLStrArr.join(\"\"), \"\\n      \");\n        });\n    };\n    TaskRows.prototype.deleteTask = function (e) {\n        var target = e.target;\n        var parent = target.parentNode;\n        var id = parseInt(parent.id, 0);\n        // filter out task to delete\n        var newTasks = this.tasks.filter(function (task) { return task.id !== id; });\n        // update original / make API request to update data on backend\n        this.tasks = newTasks;\n        // delete any taskDurations associated with the task\n        var newTaskDurations = this.taskDurations.filter(function (taskDuration) { return taskDuration.task !== id; });\n        this.taskDurations = newTaskDurations;\n        this.trigger(\"deleteTask\", [\n            { tasks: newTasks, taskDurations: newTaskDurations },\n        ]);\n    };\n    return TaskRows;\n}(_Utils_EventEmitter__WEBPACK_IMPORTED_MODULE_0__.EventEmitter));\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TaskRows);\n\n\n//# sourceURL=webpack://my-webpack-project/./src/ganttChart/content/taskRows.ts?");

/***/ }),

/***/ "./src/ganttChart/content/timeline.ts":
/*!********************************************!*\
  !*** ./src/ganttChart/content/timeline.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utils/utils */ \"./src/ganttChart/Utils/utils.ts\");\n\nvar Timeline = /** @class */ (function () {\n    function Timeline(ganttChart) {\n        this.gantt = ganttChart;\n        this.containerTimePeriods = ganttChart.containerTimePeriods;\n        this.tasks = ganttChart.tasks;\n        //   this.createMonthsRow(this.gantt.startDate, this.gantt.numMonths);\n    }\n    Timeline.prototype.createMonthsRow = function (startMonth, numMonths) {\n        this.containerTimePeriods.style.gridTemplateColumns = \"repeat(\".concat(numMonths, \", 1fr)\");\n        var month = new Date(startMonth);\n        for (var i = 0; i < numMonths; i++) {\n            var timePeriodEl = document.createElement(\"div\");\n            timePeriodEl.className = \"gantt-time-period\";\n            // to center text vertically\n            var timePeriodElSpan = document.createElement(\"span\");\n            timePeriodElSpan.innerHTML =\n                _Utils_utils__WEBPACK_IMPORTED_MODULE_0__.months[month.getMonth()] + \" \" + month.getFullYear();\n            timePeriodEl.appendChild(timePeriodElSpan);\n            this.containerTimePeriods.appendChild(timePeriodEl);\n            month.setMonth(month.getMonth() + 1);\n        }\n    };\n    Timeline.prototype.createDaysRow = function (startMonth, numMonths) {\n        var month = new Date(startMonth);\n        for (var i = 0; i < numMonths; i++) {\n            var timePeriodEl = document.createElement(\"div\");\n            timePeriodEl.className = \"gantt-time-period\";\n            this.containerTimePeriods.appendChild(timePeriodEl);\n            // add days as children\n            var numDays = (0,_Utils_utils__WEBPACK_IMPORTED_MODULE_0__.getDaysInMonth)(month.getFullYear(), month.getMonth() + 1);\n            for (var i_1 = 1; i_1 <= numDays; i_1++) {\n                var dayEl = document.createElement(\"div\");\n                dayEl.className = \"gantt-time-period\";\n                var dayElSpan = document.createElement(\"span\");\n                dayElSpan.innerHTML = i_1.toString();\n                dayEl.appendChild(dayElSpan);\n                timePeriodEl.appendChild(dayEl);\n            }\n            month.setMonth(month.getMonth() + 1);\n        }\n    };\n    Timeline.prototype.createDaysOfTheWeekRow = function (startMonth, numMonths) {\n        var month = new Date(startMonth);\n        for (var i = 0; i < numMonths; i++) {\n            var timePeriodEl = document.createElement(\"div\");\n            timePeriodEl.className = \"gantt-time-period day\";\n            this.containerTimePeriods.appendChild(timePeriodEl);\n            // add days of the week as children\n            var currYear = month.getFullYear();\n            var currMonth = month.getMonth() + 1;\n            var numDays = (0,_Utils_utils__WEBPACK_IMPORTED_MODULE_0__.getDaysInMonth)(currYear, currMonth);\n            for (var i_2 = 1; i_2 <= numDays; i_2++) {\n                var dayEl = document.createElement(\"div\");\n                dayEl.className = \"gantt-time-period\";\n                var dayOfTheWeek = (0,_Utils_utils__WEBPACK_IMPORTED_MODULE_0__.getDayOfWeek)(currYear, currMonth - 1, i_2 - 1);\n                var dayElSpan = document.createElement(\"span\");\n                dayElSpan.innerHTML = dayOfTheWeek;\n                dayEl.appendChild(dayElSpan);\n                timePeriodEl.appendChild(dayEl);\n            }\n            month.setMonth(month.getMonth() + 1);\n        }\n    };\n    Timeline.prototype.createTaskRowsTimePeriods = function (startMonth, numMonths) {\n        var dayElContainer = document.createElement(\"div\");\n        dayElContainer.className = \"gantt-time-period-cell-container\";\n        dayElContainer.style.gridTemplateColumns = \"repeat(\".concat(numMonths, \", 1fr)\");\n        this.containerTimePeriods.appendChild(dayElContainer);\n        this.tasks.forEach(function (task) {\n            var month = new Date(startMonth);\n            for (var i = 0; i < numMonths; i++) {\n                var timePeriodEl = document.createElement(\"div\");\n                timePeriodEl.className = \"gantt-time-period\";\n                dayElContainer.appendChild(timePeriodEl);\n                var currYear = month.getFullYear();\n                var currMonth = month.getMonth() + 1;\n                var numDays = (0,_Utils_utils__WEBPACK_IMPORTED_MODULE_0__.getDaysInMonth)(currYear, currMonth);\n                for (var i_3 = 1; i_3 <= numDays; i_3++) {\n                    var dayEl = document.createElement(\"div\");\n                    dayEl.className = \"gantt-time-period-cell\";\n                    // color weekend cells differently\n                    var dayOfTheWeek = (0,_Utils_utils__WEBPACK_IMPORTED_MODULE_0__.getDayOfWeek)(currYear, currMonth - 1, i_3 - 1);\n                    if (dayOfTheWeek === \"S\") {\n                        dayEl.style.backgroundColor = \"#f7f7f7\";\n                    }\n                    // add task and date data attributes\n                    var formattedDate = (0,_Utils_utils__WEBPACK_IMPORTED_MODULE_0__.createFormattedDateFromStr)(currYear, currMonth, i_3);\n                    dayEl.dataset.task = task.id.toString();\n                    dayEl.dataset.date = formattedDate;\n                    timePeriodEl.appendChild(dayEl);\n                }\n                month.setMonth(month.getMonth() + 1);\n            }\n        });\n    };\n    return Timeline;\n}());\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Timeline);\n\n\n//# sourceURL=webpack://my-webpack-project/./src/ganttChart/content/timeline.ts?");

/***/ }),

/***/ "./src/ganttChart/ganttChart.ts":
/*!**************************************!*\
  !*** ./src/ganttChart/ganttChart.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _htmlContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./htmlContent */ \"./src/ganttChart/htmlContent.ts\");\n/* harmony import */ var _Utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Utils/utils */ \"./src/ganttChart/Utils/utils.ts\");\n/* harmony import */ var _content_grid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./content/grid */ \"./src/ganttChart/content/grid.ts\");\n\n\n\nvar GenttChart = /** @class */ (function () {\n    function GenttChart(ganttChartElement, tasks, taskDurations) {\n        var _this = this;\n        this.ganttChartElement = ganttChartElement;\n        this.tasks = tasks;\n        this.taskDurations = taskDurations;\n        this.contentFragment = (0,_htmlContent__WEBPACK_IMPORTED_MODULE_0__.createHtmlContentFragment)();\n        this.fromSelectYear =\n            this.contentFragment.querySelector(\"#from-select-year\");\n        this.fromSelectMonth =\n            this.contentFragment.querySelector(\"#from-select-month\");\n        this.toSelectYear = this.contentFragment.querySelector(\"#to-select-year\");\n        this.toSelectMonth = this.contentFragment.querySelector(\"#to-select-month\");\n        this.monthOptionsHTMLStrArr = [];\n        for (var i = 0; i < _Utils_utils__WEBPACK_IMPORTED_MODULE_1__.months.length; i++) {\n            this.monthOptionsHTMLStrArr.push(\"<option value=\\\"\".concat(i, \"\\\">\").concat(_Utils_utils__WEBPACK_IMPORTED_MODULE_1__.months[i], \"</option>\"));\n        }\n        var years = [];\n        for (var i = 2022; i <= 2050; i++) {\n            years.push(\"<option value=\\\"\".concat(i, \"\\\">\").concat(i, \"</option>\"));\n        }\n        // add date selector values\n        this.fromSelectMonth.innerHTML = \"\\n  \".concat(this.monthOptionsHTMLStrArr.join(\"\"));\n        this.fromSelectYear.innerHTML = \"\".concat(years.join(\"\"));\n        this.toSelectMonth.innerHTML = \"\".concat(this.monthOptionsHTMLStrArr.join(\"\"));\n        this.toSelectYear.innerHTML = \"\".concat(years.join(\"\"));\n        // create grid\n        this.containerTasks = this.contentFragment.querySelector(\"#gantt-grid-container__tasks\");\n        console.log(this.containerTasks);\n        this.containerTimePeriods = this.contentFragment.querySelector(\"#gantt-grid-container__time\");\n        this.addTaskForm = this.contentFragment.querySelector(\"#add-task\");\n        this.addTaskDurationForm =\n            this.contentFragment.querySelector(\"#add-task-duration\");\n        this.taskSelect = this.addTaskDurationForm.querySelector(\"#select-task\");\n        this.ganttChartElement.appendChild(this.contentFragment);\n        this.grid = new _content_grid__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n        this.grid.createGrid();\n        this.grid.taskRows.on(\"deleteTask\", function (attrs) {\n            _this.containerTimePeriods.innerHTML = \"\";\n            _this.grid.tasks = attrs.tasks;\n            _this.grid.taskDurations = attrs.taskDurations;\n            _this.grid.taskRows.tasks = attrs.tasks;\n            _this.grid.taskRows.taskDurations = attrs.taskDurations;\n            _this.grid.timeLine.tasks = attrs.tasks;\n            // this.grid.timeLine.taskDurations = attrs.taskDurations;\n            _this.grid.createGrid();\n        });\n    }\n    return GenttChart;\n}());\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GenttChart);\n// functional componenet\n// re-create Grid if year / month selection changes\n// fromSelectYear.addEventListener(\"change\", createGrid);\n// fromSelectMonth.addEventListener(\"change\", createGrid);\n// toSelectYear.addEventListener(\"change\", createGrid);\n// toSelectMonth.addEventListener(\"change\", createGrid);\n// addTaskDurationForm.addEventListener(\"submit\", handleAddTaskDurationForm);\n// addTaskForm.addEventListener(\"submit\", handleAddTaskForm);\n\n\n//# sourceURL=webpack://my-webpack-project/./src/ganttChart/ganttChart.ts?");

/***/ }),

/***/ "./src/ganttChart/htmlContent.ts":
/*!***************************************!*\
  !*** ./src/ganttChart/htmlContent.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createHtmlContentFragment\": () => (/* binding */ createHtmlContentFragment)\n/* harmony export */ });\n/* harmony import */ var _style__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style */ \"./src/ganttChart/style.ts\");\n\nfunction createHtmlContentFragment() {\n    var content = \"\\n  <style>\\n    \".concat((0,_style__WEBPACK_IMPORTED_MODULE_0__.cssStyles)(), \"\\n  </style>\\n\\n  <div id=\\\"gantt-container\\\">\\n\\n      <div class=\\\"title\\\">\\n        <h1> Gantt Tracker</h1>\\n      </div>\\n\\n      <div id=\\\"gantt-grid-container\\\">\\n        <div id=\\\"gantt-grid-container__tasks\\\"></div>\\n        <div id=\\\"gantt-grid-container__time\\\"></div>\\n      </div>\\n\\n      <div id=\\\"add-forms-container\\\">\\n         \\n          <div class=\\\"inner-form-container\\\">\\n              \\n                <form id=\\\"add-task\\\">\\n                  <h1>Add Task</h1>                  \\n                  <div><input placeholder=\\\"Add task name\\\" type=\\\"text\\\"></div>\\n                  <button type=\\\"submit\\\">\\n                    Add\\n                  </button>\\n                </form>\\n       \\n        \\n                \\n                <form id=\\\"add-task-duration\\\">\\n                    <h1>Add Task duration</h1>\\n                    <div class=\\\"inner-form-container\\\">\\n                        <fieldset >\\n                          <label for=\\\"select-task\\\">Which task?</label>\\n                          <select id=\\\"select-task\\\" name=\\\"select-task\\\"></select>\\n                        </fieldset>\\n                        <fieldset id=\\\"date\\\" >\\n                          <label for=\\\"start-date\\\">Start date:</label>\\n                          <input type=\\\"date\\\" id=\\\"start-date\\\" name=\\\"start-date\\\"\\n                              value=\\\"2022-01-01\\\"\\n                              min=\\\"2022-01-01\\\" max=\\\"2050-12-31\\\"\\n                          >\\n                    \\n                          <label for=\\\"end-date\\\">End date:</label>\\n                          <input type=\\\"date\\\" id=\\\"end-date\\\" name=\\\"end-date\\\"\\n                            value=\\\"2022-01-03\\\"\\n                            min=\\\"2022-01-01\\\" max=\\\"2050-12-31\\\"\\n                          >\\n                        </fieldset>\\n                    </div>\\n                    <button>\\n                      Add\\n                    </button>\\n                </form>\\n               \\n            </div>\\n          \\n          <div class=\\\"tracker-period\\\">                 \\n              <h1 >Tracker Period</h1>\\n              <div>\\n                  <div id=\\\"settings\\\">\\n                      <fieldset id=\\\"select-from\\\">\\n                          <legend>From</legend>\\n                          <select id=\\\"from-select-month\\\" name=\\\"from-select-month\\\"></select>\\n                          <select id=\\\"from-select-year\\\" name=\\\"from-select-year\\\"></select>\\n                      </fieldset>\\n                \\n                      <fieldset id=\\\"select-to\\\">\\n                          <legend>To</legend>\\n                          <select id=\\\"to-select-month\\\" name=\\\"to-select-month\\\"></select>\\n                          <select id=\\\"to-select-year\\\" name=\\\"to-select-year\\\"></select>\\n                      </fieldset>\\n                  </div>\\n              </div>\\n           </div>\\n      <div>\\n  </div>\\n  \");\n    // turn the HTML string into a document fragment\n    var contentFragment = document\n        .createRange()\n        .createContextualFragment(content);\n    return contentFragment;\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./src/ganttChart/htmlContent.ts?");

/***/ }),

/***/ "./src/ganttChart/style.ts":
/*!*********************************!*\
  !*** ./src/ganttChart/style.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cssStyles\": () => (/* binding */ cssStyles)\n/* harmony export */ });\nfunction cssStyles() {\n    var CELL_HEIGHT = 40;\n    var outlineColor = \"#e9eaeb\";\n    return \"\\n    * {\\n        box-sizing: border-box;\\n        margin: 0;\\n    }\\n\\n    html {\\n      font-family: 'Montserrat', sans-serif;\\n    }\\n\\n    h1 {\\n      font-size: 1.5rem;\\n    }\\n\\n    fieldset {\\n        border:none;\\n        padding: 0.5rem;\\n    }\\n\\n    fieldset label {\\n      margin-right: 10px;\\n    }\\n\\n    #date > label:nth-child(3) {\\n      margin-left: 10px;\\n    }\\n\\n    form button {\\n      width: 70px;\\n      height: 50px;\\n    }\\n\\n    select {\\n      font-size: 1.2rem;\\n      padding: 0.2rem 0.2rem;\\n      box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.05);\\n    }\\n\\n    input {\\n      font-family: 'Montserrat', sans-serif;\\n      height: 100%;\\n      padding: 10px 5px;\\n      border: 1px solid #EDEDED;\\n      border-radius: 5px;\\n      transition: 0.2s ease-out;\\n    }\\n\\n    input:focus {\\n      outline-color: #0095e4;\\n    }\\n\\n    button:hover {\\n      cursor: pointer;\\n    }\\n    \\n    .title {\\n      text-align: center; \\n      margin-bottom: 20px\\n    }\\n\\n    #gantt-container {\\n      padding: 1rem;\\n    }\\n\\n    #gantt-grid-container {\\n        display: grid;\\n        grid-template-columns: 150px 1fr;\\n        outline: 2px solid \".concat(outlineColor, \";\\n    }\\n\\n    #gantt-grid-container, #settings > fieldset,\\n    #add-task, #add-task-duration  {\\n      border-radius: 5px;\\n      box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.05);\\n    }\\n\\n    #gantt-grid-container__time {\\n      display: grid;\\n      overflow-x: auto;\\n    }\\n\\n    .gantt-task-row {\\n        outline: 0.5px solid \").concat(outlineColor, \";\\n        text-align: center;\\n        height: \").concat(CELL_HEIGHT, \"px;\\n        // expand across whole grid\\n        grid-column: 1/-1;\\n        width: 100%;\\n        border: none;\\n    }\\n\\n    .gantt-task-row button {\\n      border: none;\\n      height: \").concat(CELL_HEIGHT, \"px;\\n    }\\n\\n    .gantt-task-row input {\\n      width: 80%;\\n      border: none;\\n      outline: none;\\n      background: none;\\n    }\\n\\n    #gantt-grid-container__tasks button {\\n      color: #ef5350;\\n      background: none;\\n      border-radius: 5px;\\n      height: 20px;\\n      transition: all 0.2s ease;\\n    }\\n\\n    #gantt-grid-container__tasks button:focus {\\n      outline: none;\\n      transform: scale(1.3);\\n    }\\n\\n    #gantt-grid-container__tasks .gantt-task-row {\\n      padding: 2px 0;\\n    }\\n\\n    .gantt-time-period {\\n        display: grid;\\n        grid-auto-flow: column;\\n        grid-auto-columns: minmax(30px, 1fr);\\n        text-align: center;\\n        height: \").concat(CELL_HEIGHT, \"px;\\n    }\\n\\n    .gantt-time-period span {\\n      margin: auto;\\n    }\\n\\n    .gantt-time-period-cell-container {\\n      grid-column: 1/-1;\\n      display: grid;\\n    }\\n\\n    .gantt-time-period-cell {\\n      position: relative;\\n      outline: 0.5px solid \").concat(outlineColor, \";\\n    }\\n    \\n    .day {\\n      color: #bbb;\\n    }\\n\\n    #settings {\\n        display: flex;\\n        align-items: center;\\n        font-size: 14px;\\n        padding-bottom: 0.5rem;\\n    }\\n\\n    .taskDuration {\\n      position: absolute;\\n      height: \").concat(CELL_HEIGHT, \"px;\\n      z-index: 1;\\n      background: linear-gradient(90deg, rgba(158,221,255,1) 0%, rgba(0,149,228,1) 100%);\\n      border-radius: 5px;\\n      box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.05);\\n      cursor: move;\\n    }\\n\\n\\n    .taskDuration:focus {\\n      outline: 1px solid black;\\n    }\\n\\n    .dragging {\\n      opacity: 0.5;\\n    }\\n\\n    #add-forms-container {\\n      display: flex;\\n      flex-wrap: wrap;\\n      padding: 1rem 0;\\n      justify-content: space-between;\\n    }\\n\\n    #add-forms-container form {\\n      padding: 1rem;\\n    }\\n\\n    #add-forms-container form > * {\\n      display: flex;\\n      align-items: center;\\n    }\\n\\n    #add-forms-container input {\\n      height: \").concat(CELL_HEIGHT, \"px;\\n    }\\n\\n    #add-task, #add-task-duration {\\n      margin-right: 10px;\\n      margin-bottom: 10px;\\n    }\\n\\n    #add-forms-container button:hover,\\n    #add-forms-container button:focus {\\n      opacity: 0.85;\\n    }\\n    \\n    input[type=text], select {\\n      padding: 5px 7px;\\n      margin: 8px 0;\\n      display: inline-block;\\n      border: 1px solid #ccc;\\n      border-radius: 4px;\\n      box-sizing: border-box;\\n      font-family: 'Montserrat', sans-serif;\\n      font-size: 13px;\\n    }\\n    \\n\\n    #add-forms-container button {\\n      color: white;\\n      background: #2ade3c;\\n      font-size: 1.1rem;\\n      box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.05);\\n      padding: 0.5rem 1rem;\\n      border: 0;\\n      border-radius: 5px;\\n      transition: all 0.3s ease;\\n      font-family: 'Montserrat', sans-serif;\\n      font-size: 13px;\\n    }\\n    \\n    .tracker-period {\\n      padding: 1rem;\\n    }\\n    \\n    .tracker-period h1{\\n      margin-bottom: 16px;\\n    }\\n    \\n    .inner-form-container {\\n      display: flex; \\n      flex-direction: row\\n    }\\n    \\n    .inner-form-container h1 {\\n      margin-bottom: 0.5rem;\\n    }  \\n  \");\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./src/ganttChart/style.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ganttChart_ganttChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ganttChart/ganttChart */ \"./src/ganttChart/ganttChart.ts\");\n\n// can have multiple instances of Gantt chart\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    // get data - could get from server\n    var tasks = [\n        { id: 1, name: \"Task 1\" },\n        { id: 2, name: \"Task 2\" },\n        { id: 3, name: \"Task 3\" },\n        { id: 4, name: \"Task 4\" },\n        { id: 5, name: \"Task 5\" },\n        { id: 6, name: \"Task 6\" },\n        { id: 7, name: \"Task 7\" },\n        { id: 8, name: \"Task 8\" },\n    ];\n    /// modified data should be\n    // const tasks = [\n    //   { id: 1, name: \"Task 1\", start: new Date(\"2022/1/10\"), end: new Date(\"2022/1/15\"), parent:null },\n    //   { id: 2, name: \"Task 2\", start: new Date(\"2022/1/10\"), end: new Date(\"2022/1/15\"), parent: 1 },\n    //   { id: 3, name: \"Task 3\" },\n    //   { id: 4, name: \"Task 4\" , start: new Date(\"2022/1/11\"), end: new Date(\"2022/1/18\"), parent: 3},\n    // ];\n    console.log(tasks);\n    var taskDurations = [\n        {\n            id: \"1\",\n            start: new Date(\"2022/1/2\"),\n            end: new Date(\"2022/1/8\"),\n            task: 1,\n        },\n        {\n            id: \"2\",\n            start: new Date(\"2022/1/10\"),\n            end: new Date(\"2022/1/15\"),\n            task: 2,\n        },\n        {\n            id: \"3\",\n            start: new Date(\"2022/1/11\"),\n            end: new Date(\"2022/1/18\"),\n            task: 4,\n        },\n    ];\n    var ganttCharts = document.querySelectorAll(\".gantt-chart\");\n    console.log(ganttCharts);\n    ganttCharts.forEach(function (ganttChart) {\n        console.log(\"From loop\", ganttChart);\n        ganttChart.innerHTML = \"\";\n        new _ganttChart_ganttChart__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ganttChart, tasks, taskDurations);\n    });\n});\n\n\n//# sourceURL=webpack://my-webpack-project/./src/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;