/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/classes/dateLine.ts":
/*!*********************************!*\
  !*** ./src/classes/dateLine.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DateLine\": () => (/* binding */ DateLine)\n/* harmony export */ });\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helper */ \"./src/utils/helper.ts\");\n/* harmony import */ var _utils_scales__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/scales */ \"./src/utils/scales.ts\");\n\n\nvar DateLine = /** @class */ (function () {\n    function DateLine(ctx, canvas, options, date) {\n        this.options = options;\n        this.dateLine = date;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        var maxmin = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.minmax)(this.options.data);\n        this.minDate = maxmin[0];\n        this.maxDate = maxmin[1];\n        this.maxValue = maxmin[1].getTime();\n        this.minValue = maxmin[0].getTime();\n        this.xpos = (0,_utils_scales__WEBPACK_IMPORTED_MODULE_1__.scaleX)(this.dateLine, this.minDate, this.maxDate, this.canvas.width - 2 * this.options.padding);\n    }\n    DateLine.prototype.draw = function () {\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = \"red\";\n        this.ctx.lineWidth = 3;\n        this.ctx.moveTo(this.xpos + this.options.padding, this.options.padding);\n        this.ctx.lineTo(this.xpos + this.options.padding, this.canvas.height - this.options.padding);\n        this.ctx.stroke();\n    };\n    DateLine.prototype.update = function (date) {\n        this.dateLine = date;\n        this.xpos = (0,_utils_scales__WEBPACK_IMPORTED_MODULE_1__.scaleX)(this.dateLine, this.minDate, this.maxDate, this.canvas.width - 2 * this.options.padding);\n        this.draw();\n    };\n    DateLine.prototype.collision = function (x, y) {\n        if (this.xpos + this.options.padding - 5 <= x &&\n            this.xpos + this.options.padding + 5 >= x) {\n            this.ctx.beginPath();\n            this.ctx.strokeStyle = \"red\";\n            this.ctx.lineWidth = 3;\n            this.ctx.moveTo(this.xpos + this.options.padding, this.options.padding);\n            this.ctx.lineTo(this.xpos + this.options.padding, this.canvas.height - this.options.padding);\n            this.ctx.stroke();\n        }\n        else {\n            this.ctx.beginPath();\n            this.ctx.strokeStyle = \"blue\";\n            this.ctx.lineWidth = 3;\n            this.ctx.moveTo(this.xpos + this.options.padding, this.options.padding);\n            this.ctx.lineTo(this.xpos + this.options.padding, this.canvas.height - this.options.padding);\n            this.ctx.stroke();\n        }\n    };\n    return DateLine;\n}());\n\n\n\n//# sourceURL=webpack://my-webpack-project/./src/classes/dateLine.ts?");

/***/ }),

/***/ "./src/classes/ganttChart.ts":
/*!***********************************!*\
  !*** ./src/classes/ganttChart.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GanttChart\": () => (/* binding */ GanttChart)\n/* harmony export */ });\n/* harmony import */ var _dateLine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dateLine */ \"./src/classes/dateLine.ts\");\n/* harmony import */ var _task__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./task */ \"./src/classes/task.ts\");\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/helper */ \"./src/utils/helper.ts\");\n/* harmony import */ var _utils_scales__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/scales */ \"./src/utils/scales.ts\");\n/* harmony import */ var _timeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./timeline */ \"./src/classes/timeline.ts\");\n\n\n\n\n\nvar GanttChart = /** @class */ (function () {\n    function GanttChart(options) {\n        var _this = this;\n        this.options = options;\n        this.canvas = options.canvas;\n        this.canvas.height =\n            2 * this.options.padding + 50 * this.options.data.length;\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.colors = options.colors;\n        this.titleOptions = options.titleOptions;\n        var maxmin = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.minmax)(this.options.data);\n        this.maxValue = maxmin[1].getTime();\n        this.minValue = maxmin[0].getTime();\n        this.minDate = maxmin[0];\n        this.maxDate = maxmin[1];\n        var duration = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.dayDiff)(this.minDate, this.maxDate);\n        console.log(duration);\n        this.canvas.width = 30 * duration;\n        this.dateLine = new _dateLine__WEBPACK_IMPORTED_MODULE_0__.DateLine(this.ctx, this.canvas, this.options, this.minDate);\n        this.timeLine = new _timeline__WEBPACK_IMPORTED_MODULE_4__.TimeLine(this.ctx, this.canvas, this.options);\n        this.tasks = [];\n        var currentDate = new Date(2020, 1, 15);\n        this.canvas.addEventListener(\"mousemove\", function (e) {\n            var parent = e.target.parentElement;\n            for (var _i = 0, _a = _this.tasks; _i < _a.length; _i++) {\n                var task = _a[_i];\n                task.collision(e.pageX - parent.offsetLeft, e.pageY - parent.offsetTop);\n            }\n            _this.dateLine.collision(e.pageX - parent.offsetLeft, e.pageY - parent.offsetTop);\n        });\n    }\n    GanttChart.prototype.drawGridLines = function () {\n        var canvasActualHeight = this.canvas.height - this.options.padding * 2;\n        var canvasActualWidth = this.canvas.width - this.options.padding * 2;\n        var gridValue = 0;\n        // while (gridValue <= this.maxValue) {\n        var gridY = canvasActualWidth * (1 - gridValue / this.maxValue) +\n            this.options.padding;\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.drawLine)(this.ctx, this.options.padding, this.options.padding, this.options.padding + canvasActualWidth, this.options.padding, \"black\");\n        var rowHeight = 50;\n        for (var i in this.options.data) {\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_2__.drawLine)(this.ctx, this.options.padding, this.options.padding + rowHeight * (parseInt(i) + 1), this.options.padding + canvasActualWidth, this.options.padding + rowHeight * (parseInt(i) + 1), \"lightgray\");\n        }\n        //   drawLine(\n        //     this.ctx,\n        //     15,\n        //     this.options.padding / 2,\n        //     15,\n        //     gridY + this.options.padding / 2,\n        //     \"lightgray\"\n        //   );\n        // Writing grid markers\n        //   this.ctx.save();\n        //   this.ctx.fillStyle = this.options.gridColor;\n        //   this.ctx.textBaseline = \"bottom\";\n        //   this.ctx.font = \"bold 10px Arial\";\n        //   this.ctx.fillText(gridValue.toString(), 0, gridY - 2);\n        //   this.ctx.restore();\n        gridValue += this.options.gridScale;\n        // }\n    };\n    GanttChart.prototype.drawBars = function () {\n        var canvasActualHeight = this.canvas.height - this.options.padding * 2;\n        var canvasActualWidth = this.canvas.width - this.options.padding * 2;\n        var values = Object.values(this.options.data);\n        for (var idx in this.options.data) {\n            var taskData = this.options.data[idx];\n            var yOffset = this.options.padding + 50 * parseInt(idx) + 10;\n            var xStart = (0,_utils_scales__WEBPACK_IMPORTED_MODULE_3__.scaleX)(taskData.start, this.minDate, this.maxDate, canvasActualWidth);\n            var xEnd = (0,_utils_scales__WEBPACK_IMPORTED_MODULE_3__.scaleX)(taskData.end, this.minDate, this.maxDate, canvasActualWidth);\n            var barWidth = xEnd - xStart;\n            var bar = new _task__WEBPACK_IMPORTED_MODULE_1__.Task(xStart + this.options.padding, yOffset, barWidth, 30, this.ctx, \"blue\", \"white\", taskData.name);\n            this.tasks.push(bar);\n            bar.draw();\n            // draw text to the right of the bar\n            //   this.ctx.textAlign = \"center\";\n            //   this.ctx.textBaseline = \"middle\";\n            //   let fontSize = Math.min(barWidth / 1.5, 20);\n            //   this.ctx.font = `${fontSize}px Arial`;\n            //   this.ctx.fillStyle = \"black\";\n            //   this.ctx.fillText(\n            //     taskData.name,\n            //     xEnd + this.options.padding + 3 * fontSize,\n            //     yOffset + 15\n            //   );\n            this.ctx.restore();\n            // this.colors[barIndex % this.colors.length];\n        }\n        // for (let val of values) {\n        //   var barHeight = Math.round((canvasActualHeight * val) / this.maxValue);\n        //   drawBar(\n        //     this.ctx,\n        //     this.options.padding + barIndex * (barSize + 40),\n        //     this.canvas.height - barHeight - this.options.padding,\n        //     barSize - 40,\n        //     barHeight,\n        //     this.colors[barIndex % this.colors.length]\n        //   );\n        //   barIndex++;\n        // }\n    };\n    GanttChart.prototype.drawDateLine = function () {\n        this.dateLine = new _dateLine__WEBPACK_IMPORTED_MODULE_0__.DateLine(this.ctx, this.canvas, this.options, new Date(2020, 1, 15));\n        this.dateLine.draw();\n    };\n    GanttChart.prototype.drawTimeLine = function () {\n        this.timeLine = new _timeline__WEBPACK_IMPORTED_MODULE_4__.TimeLine(this.ctx, this.canvas, this.options);\n        this.timeLine.draw();\n    };\n    GanttChart.prototype.draw = function () {\n        this.drawGridLines();\n        this.drawBars();\n        this.drawDateLine();\n        this.drawTimeLine();\n    };\n    return GanttChart;\n}());\n\n\n\n//# sourceURL=webpack://my-webpack-project/./src/classes/ganttChart.ts?");

/***/ }),

/***/ "./src/classes/task.ts":
/*!*****************************!*\
  !*** ./src/classes/task.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Task\": () => (/* binding */ Task)\n/* harmony export */ });\nvar Task = /** @class */ (function () {\n    function Task(x, y, width, height, context, color, fontColor, name) {\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n        this.color = color;\n        this.fontColor = fontColor;\n        this.name = name;\n        this.context = context;\n        this.hoverColor = \"red\";\n    }\n    Task.prototype.draw = function (color, fontColor, name) {\n        color\n            ? (this.color = color)\n            : this.color\n                ? this.color\n                : (this.color = \"blue\");\n        fontColor\n            ? (this.fontColor = fontColor)\n            : this.fontColor\n                ? this.fontColor\n                : (this.fontColor = \"white\");\n        name ? (this.name = name) : this.name ? this.name : (this.name = \"Task\");\n        if (this.name) {\n            this.context.textAlign = \"center\";\n            this.context.textBaseline = \"middle\";\n            var fontSize = Math.min(this.width / 1.5, this.height / 1.5);\n            this.context.font = \"\".concat(fontSize, \"px Arial\");\n            this.context.fillStyle = this.color;\n            this.context.fillRect(this.x, this.y, this.width, this.height);\n            this.context.fillStyle = this.fontColor;\n            // this.context.fillStyle = \"black\";\n            this.context.fillText(this.name, this.x + this.width / 2, this.y + this.height / 2);\n        }\n    };\n    Task.prototype.update = function (x, y) {\n        this.draw();\n        this.x = x;\n        this.y = y;\n    };\n    Task.prototype.collision = function (x, y) {\n        if (x >= this.x &&\n            x <= this.x + this.width &&\n            y >= this.y &&\n            y <= this.y + this.height) {\n            this.color = this.hoverColor;\n            this.draw();\n            return true;\n        }\n        else {\n            this.color = \"blue\";\n            this.draw();\n            return false;\n        }\n    };\n    return Task;\n}());\n\n\n\n//# sourceURL=webpack://my-webpack-project/./src/classes/task.ts?");

/***/ }),

/***/ "./src/classes/timeline.ts":
/*!*********************************!*\
  !*** ./src/classes/timeline.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TimeLine\": () => (/* binding */ TimeLine)\n/* harmony export */ });\n/* harmony import */ var _utils_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helper */ \"./src/utils/helper.ts\");\n/* harmony import */ var _utils_scales__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/scales */ \"./src/utils/scales.ts\");\n\n\n\nvar TimeLine = /** @class */ (function () {\n    function TimeLine(ctx, canvas, options) {\n        this.options = options;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        var maxmin = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.minmax)(this.options.data);\n        this.minDate = maxmin[0];\n        this.maxDate = maxmin[1];\n        this.maxValue = maxmin[1].getTime();\n        this.minValue = maxmin[0].getTime();\n    }\n    TimeLine.prototype.draw = function () {\n        var noOfYears = this.maxDate.getFullYear() - this.minDate.getFullYear();\n        var noOfMonths = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.monthDiff)(this.minDate, this.maxDate);\n        var noOfDays = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.dayDiff)(this.minDate, this.maxDate);\n        console.log(noOfYears, noOfMonths, noOfDays, this.canvas.width);\n        for (var i = 0; i < noOfDays; i++) {\n            var scaledX = (0,_utils_scales__WEBPACK_IMPORTED_MODULE_1__.scaleX)((0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.addDays)(this.minDate, i), this.minDate, this.maxDate, this.canvas.width - 2 * this.options.padding);\n            var date_1 = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.addDays)(this.minDate, i);\n            var dayName = (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.getDayOfWeek)(date_1.getFullYear(), date_1.getMonth(), date_1.getDate() - 1);\n            console.log((0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.getDayOfWeek)(date_1.getFullYear(), date_1.getMonth(), date_1.getDate() - 1), date_1, date_1.getDate(), date_1.getMonth(), date_1.getFullYear(), \"\\n Date Entered \" + new Date(2022, 0, 30).getDay(), (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.getDayOfWeek)(2022, 0, 30));\n            this.ctx.textAlign = \"center\";\n            this.ctx.textBaseline = \"middle\";\n            var fontSize = Math.min(12);\n            this.ctx.font = \"\".concat(fontSize, \"px Arial\");\n            this.ctx.fillStyle = \"black\";\n            this.ctx.fillText(date_1.getDate().toString(), scaledX + this.options.padding, 50);\n            this.ctx.fillText(dayName, scaledX + this.options.padding, 85);\n            // line seperator between days\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.drawLine)(this.ctx, scaledX + this.options.padding + 15, 40, scaledX + this.options.padding + 15, this.canvas.height - this.options.padding, \"lightgray\");\n        }\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.drawLine)(this.ctx, this.options.padding, 40, this.canvas.width - this.options.padding, 40, \"black\");\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.drawLine)(this.ctx, this.options.padding, 70, this.canvas.width - this.options.padding, 70, \"black\");\n        var date = this.minDate;\n        while (date <= this.maxDate) {\n            var mnth = date.getMonth();\n            var year = date.getFullYear();\n            var day = date.getDate();\n            var monthName = _utils_helper__WEBPACK_IMPORTED_MODULE_0__.months[mnth];\n            var minScale = (0,_utils_scales__WEBPACK_IMPORTED_MODULE_1__.scaleX)(new Date(year, mnth, 0), this.minDate, this.maxDate, this.canvas.width - 2 * this.options.padding);\n            var maxScale = (0,_utils_scales__WEBPACK_IMPORTED_MODULE_1__.scaleX)(new Date(year, mnth + 1, 0), this.minDate, this.maxDate, this.canvas.width - 2 * this.options.padding);\n            var scaledX = (minScale + maxScale) / 2.0;\n            this.ctx.textAlign = \"center\";\n            this.ctx.textBaseline = \"middle\";\n            var fontSize = Math.min(18);\n            this.ctx.font = \"\".concat(fontSize, \"px Arial\");\n            this.ctx.fillStyle = \"black\";\n            this.ctx.fillText(monthName, scaledX + this.options.padding, 30);\n            mnth += 1;\n            console.log(monthName);\n            date = new Date(year, mnth, day);\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.drawLine)(this.ctx, minScale + this.options.padding + 15, 15, minScale + this.options.padding + 15, this.canvas.height - this.options.padding, \"black\");\n            (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.drawLine)(this.ctx, maxScale + this.options.padding + 15, 15, maxScale + this.options.padding + 15, this.canvas.height - this.options.padding, \"black\");\n        }\n        //topline above month names\n        (0,_utils_helper__WEBPACK_IMPORTED_MODULE_0__.drawLine)(this.ctx, this.options.padding - 15, 15, this.canvas.width - this.options.padding, 15, \"black\");\n    };\n    TimeLine.prototype.update = function (date) { };\n    return TimeLine;\n}());\n\n\n\n//# sourceURL=webpack://my-webpack-project/./src/classes/timeline.ts?");

/***/ }),

/***/ "./src/data.ts":
/*!*********************!*\
  !*** ./src/data.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scheduleData\": () => (/* binding */ scheduleData)\n/* harmony export */ });\nvar scheduleData = [\n    {\n        id: 1,\n        name: \"Task 1\",\n        start: new Date(2020, 3, 1),\n        end: new Date(2020, 3, 30),\n        parent: 0,\n    },\n    {\n        id: 2,\n        name: \"Task 2\",\n        start: new Date(2020, 0, 12),\n        end: new Date(2020, 1, 28),\n        parent: 0,\n    },\n    {\n        id: 3,\n        name: \"Task 3\",\n        start: new Date(2020, 2, 1),\n        end: new Date(2020, 2, 30),\n        parent: 0,\n    },\n    {\n        id: 1,\n        name: \"Task 1\",\n        start: new Date(2020, 0, 1),\n        end: new Date(2020, 0, 30),\n        parent: 0,\n    },\n    {\n        id: 2,\n        name: \"Task 2\",\n        start: new Date(2020, 0, 12),\n        end: new Date(2020, 1, 28),\n        parent: 0,\n    },\n    {\n        id: 3,\n        name: \"Task 3\",\n        start: new Date(2020, 2, 1),\n        end: new Date(2020, 2, 30),\n        parent: 0,\n    },\n    {\n        id: 1,\n        name: \"Task 1\",\n        start: new Date(2020, 0, 1),\n        end: new Date(2020, 0, 30),\n        parent: 0,\n    },\n    {\n        id: 2,\n        name: \"Task 2\",\n        start: new Date(2020, 0, 12),\n        end: new Date(2020, 1, 28),\n        parent: 0,\n    },\n    {\n        id: 3,\n        name: \"Task 3\",\n        start: new Date(2020, 2, 1),\n        end: new Date(2020, 2, 30),\n        parent: 0,\n    },\n    {\n        id: 1,\n        name: \"Task 1\",\n        start: new Date(2020, 0, 1),\n        end: new Date(2020, 0, 30),\n        parent: 0,\n    },\n    {\n        id: 2,\n        name: \"Task 2\",\n        start: new Date(2020, 0, 12),\n        end: new Date(2020, 1, 28),\n        parent: 0,\n    },\n    {\n        id: 3,\n        name: \"Task 3\",\n        start: new Date(2020, 2, 1),\n        end: new Date(2020, 2, 30),\n        parent: 0,\n    },\n    {\n        id: 1,\n        name: \"Task 1\",\n        start: new Date(2020, 0, 1),\n        end: new Date(2020, 0, 30),\n        parent: 0,\n    },\n    {\n        id: 2,\n        name: \"Task 2\",\n        start: new Date(2020, 0, 12),\n        end: new Date(2020, 1, 28),\n        parent: 0,\n    },\n    {\n        id: 3,\n        name: \"Task 3\",\n        start: new Date(2020, 2, 1),\n        end: new Date(2020, 2, 30),\n        parent: 0,\n    },\n    {\n        id: 1,\n        name: \"Task 1\",\n        start: new Date(2020, 0, 1),\n        end: new Date(2020, 0, 30),\n        parent: 0,\n    },\n    {\n        id: 2,\n        name: \"Task 2\",\n        start: new Date(2020, 0, 12),\n        end: new Date(2020, 1, 28),\n        parent: 0,\n    },\n    {\n        id: 3,\n        name: \"Task 3\",\n        start: new Date(2020, 2, 1),\n        end: new Date(2020, 2, 30),\n        parent: 0,\n    },\n    {\n        id: 1,\n        name: \"Task 1\",\n        start: new Date(2020, 0, 1),\n        end: new Date(2020, 0, 30),\n        parent: 0,\n    },\n    {\n        id: 2,\n        name: \"Task 2\",\n        start: new Date(2020, 0, 12),\n        end: new Date(2020, 1, 28),\n        parent: 0,\n    },\n    {\n        id: 3,\n        name: \"Task 3\",\n        start: new Date(2020, 2, 1),\n        end: new Date(2020, 2, 30),\n        parent: 0,\n    },\n    {\n        id: 1,\n        name: \"Task 1\",\n        start: new Date(2020, 0, 1),\n        end: new Date(2020, 0, 30),\n        parent: 0,\n    },\n    {\n        id: 2,\n        name: \"Task 2\",\n        start: new Date(2020, 0, 12),\n        end: new Date(2020, 1, 28),\n        parent: 0,\n    },\n    {\n        id: 3,\n        name: \"Task 3\",\n        start: new Date(2020, 2, 1),\n        end: new Date(2020, 2, 30),\n        parent: 0,\n    },\n];\n\n\n//# sourceURL=webpack://my-webpack-project/./src/data.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ \"./src/data.ts\");\n/* harmony import */ var _classes_ganttChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/ganttChart */ \"./src/classes/ganttChart.ts\");\n\n\nvar data = _data__WEBPACK_IMPORTED_MODULE_0__.scheduleData;\nfunction drawGantt() {\n    var chartCanvas = document.getElementById(\"chartCanvas\");\n    chartCanvas.width = chartCanvas.parentElement.clientWidth;\n    chartCanvas.height = 500;\n    var options = {\n        canvas: chartCanvas,\n        padding: 100,\n        gridScale: 5,\n        gridColor: \"black\",\n        data: data,\n        titleOptions: \"Music\",\n        colors: [\"#a55ca5\", \"#67b6c7\", \"#bccd7a\", \"#eb9743\"],\n    };\n    var gantt = new _classes_ganttChart__WEBPACK_IMPORTED_MODULE_1__.GanttChart(options);\n    gantt.draw();\n}\ndrawGantt();\n\n\n//# sourceURL=webpack://my-webpack-project/./src/index.ts?");

/***/ }),

/***/ "./src/utils/helper.ts":
/*!*****************************!*\
  !*** ./src/utils/helper.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addDays\": () => (/* binding */ addDays),\n/* harmony export */   \"createFormattedDateFromDate\": () => (/* binding */ createFormattedDateFromDate),\n/* harmony export */   \"createFormattedDateFromStr\": () => (/* binding */ createFormattedDateFromStr),\n/* harmony export */   \"dayDiff\": () => (/* binding */ dayDiff),\n/* harmony export */   \"drawBar\": () => (/* binding */ drawBar),\n/* harmony export */   \"drawLine\": () => (/* binding */ drawLine),\n/* harmony export */   \"getDayOfWeek\": () => (/* binding */ getDayOfWeek),\n/* harmony export */   \"getDaysInMonth\": () => (/* binding */ getDaysInMonth),\n/* harmony export */   \"minmax\": () => (/* binding */ minmax),\n/* harmony export */   \"monthDiff\": () => (/* binding */ monthDiff),\n/* harmony export */   \"months\": () => (/* binding */ months)\n/* harmony export */ });\n/**\n * This function draws a line given its coordinates and colour\n * @param {CanvasRenderingContext2D} ctx the canvas context\n * @param {number} startX the starting point of the line on the x axis\n * @param {number} startY the starting point of the line on the y axis\n * @param {number} endX the ending point of the line on the x axis\n * @param {number} endY the ending point of the line on the y axis\n * @param {string} color the color of the line\n */\nfunction drawLine(ctx, startX, startY, endX, endY, color) {\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.stroke();\n    ctx.restore();\n}\nfunction drawBar(ctx, upperLeftCornerX, upperLeftCornerY, width, height, color) {\n    ctx.save();\n    ctx.fillStyle = color;\n    ctx.fillRect(upperLeftCornerX, upperLeftCornerY, width, height);\n    ctx.restore();\n}\n/**\n *\n * @param {data} data the data to be processes\n * @returns an array containing the min and max date\n */\nfunction minmax(data) {\n    var max = new Date(0);\n    var min = data[0].start;\n    data.forEach(function (element) {\n        if (element.end > max) {\n            max = element.end;\n        }\n        if (element.start < min) {\n            min = element.start;\n        }\n    });\n    return [min, max];\n}\n/**\n * compares two dates and returns the difference in months\n * @param {Date} firstMonth the first date of the period to compare\n * @param {Date} lastMonth the last date of the period to compare\n * @returns {number} a number representing the number of months between the two dates\n */\nfunction monthDiff(firstMonth, lastMonth) {\n    var months;\n    months = (lastMonth.getFullYear() - firstMonth.getFullYear()) * 12;\n    months -= firstMonth.getMonth();\n    months += lastMonth.getMonth();\n    return months <= 0 ? 0 : months;\n}\n/**\n * Compares two dates and returns the difference in days\n * @param {Date} startDate\n * @param {Date} endDate\n * @returns\n */\nfunction dayDiff(startDate, endDate) {\n    var difference = endDate.getTime() - startDate.getTime();\n    var days = Math.ceil(difference / (1000 * 3600 * 24)) + 1;\n    return days;\n}\n/**\n * This function returns the number of days in a given month\n * @param year the year number\n * @param month the month number\n * @returns {number} the number of days in the given month\n */\nfunction getDaysInMonth(year, month) {\n    return new Date(year, month, 0).getDate();\n}\n/**\n * This function the symbol of a day of the week given the year, month and day\n * @param year the year number\n * @param month the month number\n * @param day day number\n * @returns {string} day symbol as single character\n */\nfunction getDayOfWeek(year, month, day) {\n    var daysOfTheWeekArr = [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"];\n    var dayOfTheWeekIndex = new Date(year, month, day).getDay();\n    return daysOfTheWeekArr[dayOfTheWeekIndex];\n}\n/**\n * Create a formatted date string\n * @param {number} year\n * @param {number} month\n * @param {number} day\n * @returns {string} a formatted date string\n */\nfunction createFormattedDateFromStr(year, month, day) {\n    var monthStr = month.toString();\n    var dayStr = day.toString();\n    if (monthStr.length === 1) {\n        monthStr = \"0\".concat(monthStr);\n    }\n    if (dayStr.length === 1) {\n        dayStr = \"0\".concat(dayStr);\n    }\n    return \"\".concat(year, \"-\").concat(monthStr, \"-\").concat(dayStr);\n}\n/**\n * Formats a date object to a string\n * @param {Date}date the date to be formatted\n * @returns {string} a formatted date string\n */\nfunction createFormattedDateFromDate(date) {\n    var monthStr = (date.getMonth() + 1).toString();\n    var dayStr = date.getDate().toString();\n    if (monthStr.length === 1) {\n        monthStr = \"0\".concat(monthStr);\n    }\n    if (dayStr.length === 1) {\n        dayStr = \"0\".concat(dayStr);\n    }\n    return \"\".concat(date.getFullYear(), \"-\").concat(monthStr, \"-\").concat(dayStr);\n}\n/**\n * Adds number of days to a date and return new date\n * @param date the original date\n * @param days number of days to be added\n * @returns {Date} the new date\n */\nfunction addDays(date, days) {\n    var result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n}\nvar months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n];\n\n\n//# sourceURL=webpack://my-webpack-project/./src/utils/helper.ts?");

/***/ }),

/***/ "./src/utils/scales.ts":
/*!*****************************!*\
  !*** ./src/utils/scales.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scaleDate\": () => (/* binding */ scaleDate),\n/* harmony export */   \"scaleX\": () => (/* binding */ scaleX),\n/* harmony export */   \"scaleY\": () => (/* binding */ scaleY)\n/* harmony export */ });\n/**\n * Gets a date and returns a scaled value\n * @param  {Date} dateToSclae the date to convert into a scaled value\n * @param  {Date} minDate the min date of the chart\n * @param {Date} maxDate the max date of the chart\n * @param {number} canvasWidth the width of the canvas\n * @return {number} the scaled value\n */\nfunction scaleX(dateToSclae, minDate, maxDate, width) {\n    var min = minDate.getTime();\n    var max = maxDate.getTime();\n    var overallDuration = max - min;\n    var date = dateToSclae.getTime();\n    var scale = Math.ceil((date - min) * (width / overallDuration));\n    return scale;\n}\nfunction scaleY() {\n    // TODO\n}\n/**\n *\n * @param x the x coordinate of the point\n * @param minStart\n * @param overallDuration\n * @param canvasWidth\n * @returns the date corresponding to the x coordinate\n */\nfunction scaleDate(x, minStart, overallDuration, canvasWidth) {\n    var retDate = new Date(Math.ceil(minStart.getTime() + x * (overallDuration / canvasWidth)));\n    return retDate;\n}\n\n\n//# sourceURL=webpack://my-webpack-project/./src/utils/scales.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;